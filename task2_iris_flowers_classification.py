# -*- coding: utf-8 -*-
"""Task2_Iris_flowers_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SFcNbnaOKZ-5Dd99Y0Df2q9F7sf6hLls
"""

import pandas as pd
import numpy as np

data = pd.read_csv("/content/drive/MyDrive/Iris.csv")

data

data.head(5)

data.tail(6)

data.info()

data.describe()

data.shape

data.keys()

import matplotlib.pyplot as plt
from sklearn import tree
from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import export_graphviz
from sklearn.model_selection import train_test_split
import pydotplus

features = data[["SepalLengthCm","SepalWidthCm","PetalLengthCm","PetalWidthCm"]]
labels = data["Species"]

x_train,x_test,y_train,y_test = train_test_split(features,labels,test_size= 0.3)

model=DecisionTreeClassifier(criterion = "entropy",max_depth=4,random_state=42)
model.fit(x_train,y_train)

pred = model.predict(x_test)

import graphviz
from sklearn import tree
#Dot data
dot_data = tree.export_graphviz(model,out_file=None,feature_names = ['sepal_length','sepal_width','petal_length','petal_width'],class_names = "species",filled = True)
#Draw graph
graph = graphviz.Source(dot_data,format ="png")
graph

from sklearn.metrics import classification_report,confusion_matrix

print(confusion_matrix(y_test,pred))

print(classification_report(y_test,pred))

from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(x_train,y_train)
from sklearn.naive_bayes import GaussianNB

y_pred = classifier.predict(x_test)
y_pred

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,y_pred)
from sklearn.metrics import accuracy_score
print("Accuracy : ",accuracy_score(y_test,y_pred))
cm